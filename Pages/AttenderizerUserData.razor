@page "/role"

@inject IHttpClientFactory _ClientFactory;
@using Newtonsoft.Json;

<div class="container">
    <h3>Attenderizer Student Role</h3>
</div>




<div class="container">
    <button type="button" class="btn align-middle btn-success" @onclick="ResetAttendance">Reset Attendance</button>
    <button type="button" class="btn align-middle btn-success" @onclick="GetList">Reset List</button>

    <hr />
    <div class="col-10">

    </div>
</div>




@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <div class="h2">@errorString</div>
}
else if (userModel is null)
{
    <div class="h4">Loading...</div>
}
else
{
    <div class="container">
        <ul class="list-group">
            @foreach (var item in userModel)
            {
                <li class="list-group-item">

                    <div class="row align-items-start">
                        <div class="col">
                            <img src="/images/usericon.png" height="30" />
                        </div>
                        <div class="col">
                            @item.FirstName
                        </div>

                        <div class="col">
                            @item.Username
                        </div>
                        <div class="col">
                            @if (item.IsAbsent == false)
                            {
                                <img src="/images/presenticon.png" height="30" />
                            }
                            else
                            {
                                <img src="/images/absenticon.png" height="30" />
                            }
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>

}

@code {

    List<AttenderizerUserModel> userModel = new List<AttenderizerUserModel>();
    //HttpResponseMessage response;
    string errorString;


    protected override async Task OnInitializedAsync()
    {
        await GetList();
    }

    private async Task GetList()
    {

        userModel = null;
        var client = _ClientFactory.CreateClient();

        HttpResponseMessage response = await client.GetAsync("https://attenderizerapi.azurewebsites.net/api/login/");

        if (response.IsSuccessStatusCode)
        {
            var content = response.Content.ReadAsStringAsync().Result;
            userModel = JsonConvert.DeserializeObject<List<AttenderizerUserModel>>(content);
            errorString = null;
        }
        else
        {
            errorString = $"There was an error getting data: {response.ReasonPhrase}";
        }
    }

    public async Task ResetAttendance()
    {
        var client = _ClientFactory.CreateClient();
        HttpResponseMessage response = await client.PutAsync("https://attenderizerapi.azurewebsites.net/api/login/updatemany", null);
    }
}
