@page "/role"

@inject IHttpClientFactory _ClientFactory;
@using Newtonsoft.Json;

<h3>AttenderizerUserData</h3>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <div class="h2">@errorString</div>
}
else if (userModel is null)
{
    <div class="h4">Loading...</div>
}
else
{
    <ul class="list-group">
        @foreach (var item in userModel)
        {
        <li class="list-group-item">

            <div class="row align-items-start">
                <div class="col">
                    <img src="/images/iconfinder_user_1608727.png" height="30"/>
                </div>
                <div class="col">
                    @item.FirstName
                </div>
                <div class="col">
                    <img src="/images/iconfinder_Tick_Mark_Dark_1398912(1).png" height="30"/>
                </div>
            </div>
        </li>
        }
    </ul>
}

@code {

    List<AttenderizerUserModel> userModel = new List<AttenderizerUserModel>();
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        //var request = new HttpRequestMessage(HttpMethod.Get, "https://attenderizerapi.azurewebsites.net/api/login");

        var client = _ClientFactory.CreateClient();

        HttpResponseMessage response = await client.GetAsync("https://attenderizerapi.azurewebsites.net/api/login");

        if (response.IsSuccessStatusCode)
        {
            var content = response.Content.ReadAsStringAsync().Result;
            userModel = JsonConvert.DeserializeObject<List<AttenderizerUserModel>>(content);
            errorString = null;
        }
        else
        {
            errorString = $"There was an error getting data: {response.ReasonPhrase}";
        }
    }
}
